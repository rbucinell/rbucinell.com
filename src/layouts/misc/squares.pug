extends ../partials/layout.pug
block config
    -
        var pageConfig = {
            title: "Bucinell Sprinkle - Super Bowl 55 (2021) Squares",
            breadcrumbs: [
                {fa:"home", text:"Home", url:"index.html"},
                {fa:"check-square", text:"Super Bowl Squares", url:"squares.html"}
            ],
            pageh1: {
                title: 'Bucinell Sprinkle',
                small: 'Super Bowl 55 Squares'
            }
        }
block head
    link(rel="stylesheet", crossorigin="anonymous", href="https://bootstrap-extension.com/css/4.6.1/bootstrap-extension.min.css", type="text/css")
    style.

        #nfcChampions {
            height: 70px;
            background-color: #A71930;
            border-bottom: 1px solid #A71930;
            background-image: url(https://static.www.nfl.com/t_q-best/league/api/clubs/logos/TB);
        }

        #afcChampions {
            vertical-align:middle;
            text-align:center;
            width:50px;
            background-color: #E31836;
            border: 1px solid #E31836;
            background-image: url(https://static.www.nfl.com/t_q-best/league/api/clubs/logos/KC);
        }

        .bg-single-center {
            background-size: contain;
            background-position: center;
            background-repeat: no-repeat;
        }

block content

    p For COVID-19 safety precautions we are not going to hold a traditional baby sprinkle or a large Super Bowl party. However that isn't going to stop the fun. We are going to host a Super Bowl squares where the proceeds will go to the only thing on our registry: The <a href="https://www.wonderfoldwagon.com/products/w4s2?variant=37683222151352" rel="noopener" target="_blank">WonderFold Wagon W4S 2.0</a> so that we can push the entire clan around at the same time. Thank you so much for all who play and help us with this goal. Good Luck.
    p.lead Rules
    ul
        li Squares are <strong>$20</strong>. Please <a rel="noopener" href="https://paypal.me/rbucinell">Paypal</a> or venmo me at <a rel="noopener" href="https://account.venmo.com/u/rbucinell">@rbucinell</a>
        li The Pot will consist of the sum of the paid squres minus the MSRP of the wagon
        li The numbers will be randomized. They will be selected at 6pm on the 7th.
        li Payouts willl ramp up each quarter. Here are the pertentage payouts for each quarter:
        li(style="list-style:none"): ul.list-group.list-group-horizontal-sm
                li.list-group-item End of 1st: <strong>10%</strong>
                li.list-group-item End of 2nd: <strong>20%</strong>
                li.list-group-item End of 3rd: <strong>30%</strong>
                li.list-group-item Final Score: <strong>40%</strong>
        li I reserve the right to remove unpaid square request.
        li If you have any problems picking squares, please text Jess or I. If you don't specify a square, or the square requested is taken we will pick the next sequentially availiable

    .center
        div.d-flex.justify-content-center.align-items-end.flex-wrap
            a#submitSquaresButton.btn.btn-primary.btn-large.text-white.text-uppercase(href="https://docs.google.com/forms/d/e/1FAIpQLSfrTBaUguSjK2tWqHCuoFN2zNfJxzyFOzxxfEDPyPOfXtSdsw/viewform", rel="noopener", target="_blank")
                img(src="https://1.bp.blogspot.com/-vRa8j_5n27A/WgMKyC9lq0I/AAAAAAAADjo/WBzlPGYj6hI9b6406BddXOeLcdeHBDt9wCLcBGAs/s1600/forms-icon.png" alt="Google Forms Icon" style="max-height:30px;")
                | Submit your squares here!
        //- https://docs.google.com/forms/d/e/1FAIpQLSfrTBaUguSjK2tWqHCuoFN2zNfJxzyFOzxxfEDPyPOfXtSdsw/viewform?usp=pp_url&entry.162182405=YOUR_NAME
        //- https://docs.google.com/forms/d/e/1FAIpQLSfrTBaUguSjK2tWqHCuoFN2zNfJxzyFOzxxfEDPyPOfXtSdsw/viewform?usp=pp_url&entry.129532414=0&entry.129532414=1&entry.129532414=2&entry.129532414=3&entry.129532414=4&entry.129532414=5&entry.129532414=6&entry.129532414=7&entry.129532414=8&entry.129532414=9&entry.965582730=0&entry.965582730=1&entry.965582730=2&entry.965582730=3&entry.965582730=4&entry.965582730=5&entry.965582730=6&entry.965582730=7&entry.965582730=8&entry.965582730=9&entry.255358047=0&entry.255358047=1&entry.255358047=2&entry.255358047=3&entry.255358047=4&entry.255358047=5&entry.255358047=6&entry.255358047=7&entry.255358047=8&entry.255358047=9&entry.1445828233=0&entry.1445828233=1&entry.1445828233=2&entry.1445828233=3&entry.1445828233=4&entry.1445828233=5&entry.1445828233=6&entry.1445828233=7&entry.1445828233=8&entry.1445828233=9&entry.1483535175=0&entry.1483535175=1&entry.1483535175=2&entry.1483535175=3&entry.1483535175=4&entry.1483535175=5&entry.1483535175=6&entry.1483535175=7&entry.1483535175=8&entry.1483535175=9&entry.1462965448=0&entry.1462965448=1&entry.1462965448=2&entry.1462965448=3&entry.1462965448=4&entry.1462965448=5&entry.1462965448=6&entry.1462965448=7&entry.1462965448=8&entry.1462965448=9&entry.2020935596=0&entry.2020935596=1&entry.2020935596=2&entry.2020935596=3&entry.2020935596=4&entry.2020935596=5&entry.2020935596=6&entry.2020935596=7&entry.2020935596=8&entry.2020935596=9&entry.1923048447=0&entry.1923048447=1&entry.1923048447=2&entry.1923048447=3&entry.1923048447=4&entry.1923048447=5&entry.1923048447=6&entry.1923048447=7&entry.1923048447=8&entry.1923048447=9&entry.2051356615=0&entry.2051356615=1&entry.2051356615=2&entry.2051356615=3&entry.2051356615=4&entry.2051356615=5&entry.2051356615=6&entry.2051356615=7&entry.2051356615=8&entry.2051356615=9&entry.180197898=0&entry.180197898=1&entry.180197898=2&entry.180197898=3&entry.180197898=4&entry.180197898=5&entry.180197898=6&entry.180197898=7&entry.180197898=8&entry.180197898=9
        div.p-2
        #squares.container-fluid
            - let n = 10
            - let nums = [...Array(n).keys()]
            - let alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('').map( c => c.toUpperCase() ).slice(0, n);
            
            table.table.border.border-dark.bg-white(style="height:100%")
                thead
                    tr
                        td(colspan="2", rowspan="2")
                            div.d-flex.flex-column.border.border-white
                                img.center( style="display:block;height:80px;" src="https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fwww.duetsblog.com%2Ffiles%2F2014%2F10%2FNFLShieldLogo.jpeg&f=1&nofb=1")
                                span#squaresleft(style="font-size:small") 100 Squares left!
                        td#nfcChampions.text-white.bg-single-center(colspan="10")
                    tr.bg-secondary.border.border-secondary(style="")
                        each n,i in nums
                            // #{n}
                            th.center(scope="col", id=`nfc${i}`) #
                tbody
                    tr
                        td#afcChampions.col-1.bg-danger.text-white.bg-single-center(rowspan="11"): div.rotate-sm-l-90.display-9
                    each a,i in alphabet
                        tr
                            // #{i}
                            th.center.border.border-secondary.bg-secondary(scope="row" style="width: 20px;", id=`afc${i}`) #
                            each n,j in nums
                                td.p-0.border.border-dark.bg-light(style="width:50px")
                                    div.center(id=`${a}${n}`) #{alphabet[i]}#{nums[j]}
            .alert.alert-danger(role="alert")
                span Boxes with red backgrounds have not paid (or I haven't marked them paid yet).
                button.close(type="button", data-dismiss="alert" aria-label="Close")
                    span(aria-hidden="true") &times;
block scripts
    script(rel="noopener" src="https://bootstrap-extension.com/js/4.6.1/bootstrap-extension.min.js")
    script(rel="noopener" src="https://apis.google.com/js/api.js")
    script.
            let CSS_COLOR_NAMES = ["Indigo", "DarkOrange", "AntiqueWhite", "Ivory", "DarkRed", "Aqua", "RoyalBlue", "DarkSalmon", "SaddleBrown", "LawnGreen", "Salmon", "MidnightBlue", "Black", "LightBlue", "SeaGreen", "DeepPink", "Silver", "DodgerBlue", "Olive", "FireBrick", "Orange", "OrangeRed", "Tan", "Crimson", "GhostWhite", "Gold", "Tomato", "DarkBlue", "Magenta", "Maroon", "MediumAquaMarine", "PeachPuff", "Wheat", "WhiteSmoke", "DarkKhaki", "Yellow", "PowderBlue", "MediumBlue", "PapayaWhip", "Gainsboro", "Lime", "Gray", "PaleVioletRed", "Teal", "Coral", "White", "Blue", "MistyRose", "Black"];
            let n = 10
            let nums = [...Array(n).keys()]
            let alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('').map( c => c.toUpperCase() ).slice(0, n);
            let helmet = null;
            let nfcList = null;
            let afcList = null;
            let kickoff = new Date('February 7, 2021 18:00:00');
            let sheetsDict = {};
            
            //  Shuffle the colors
            //- CSS_COLOR_NAMES = CSS_COLOR_NAMES
            //-     .map((a) => ({sort: Math.random(), value: a}))
            //-     .sort((a, b) => a.sort - b.sort)
            //-     .map((a) => a.value);

            function updateRemainingSquares()
            {
                if (Object.entries(sheetsDict) !== 0)
                {
                    let count = Object.entries(sheetsDict).reduce( (sum, e) => sum + e[1].squares.length, 0 );
                    let msg = "";
                    if( count === 0 )
                    {
                        msg = "Board's full. Good Luck";
                        document.querySelector("#submitSquaresButton").classList.add('disabled');
                    }
                    else
                    {
                        msg = `${100-count} squares left.`;
                    }
                    document.querySelector("#squaresleft").innerText = msg;
                }
            }
            
            function getColorFromList()
            {
                let first = CSS_COLOR_NAMES.shift();
                CSS_COLOR_NAMES.push(first);
                return first;
            }
            
            function updateSquares( html )
            {
                let parser = new DOMParser();
                let doc = parser.parseFromString( html, "text/html");
                let trs = [...doc.querySelectorAll("table tr")];
                let uniqueIDs = [];
                sheetsDict = {};
                for( let i = (trs.findIndex( t => t.children[0].innerText === "Timestamp" )+1); i < trs.length; i++ )
                {
                    let name = trs[i].children[1].innerText;
                    sheetsDict[name] = { 
                        'squares' : [],
                        'purchased': (trs[i].children[13].innerText.trim() === '✔'),
                        'color' : getColorFromList()
                    };
                    if( name === "Ryan Bucinell" )
                        sheetsDict[name].color = "#004C54";
                    for( let alpha = 0; alpha <= 10; alpha++ )
                    {
                        let content = trs[i].children[2+alpha].innerText.trim();
                        if( content !== "" )
                        {
                            let boxes = content.split(",").forEach( b => {
                                let id = `${alphabet[alpha]}${b.trim()}`;
                                let boughtSquare = document.querySelector(`#${id}`);
                                boughtSquare.innerHTML = "";
                                boughtSquare.classList = "center text-dark";
                                let helmetClone = helmet.cloneNode(true);
                                helmetClone.dataset.toggle = 'tooltip';
                                helmetClone.dataset.placement = 'right';
                                helmetClone.dataset.title = `[${id}] ${name}`;
                                helmetClone.querySelector( "g > g> g> path:nth-child(11)" ).style.fill = sheetsDict[name].color;
                                boughtSquare.appendChild( helmetClone );
                                sheetsDict[name].squares.push(id);
                                if( !sheetsDict[name].purchased )
                                {
                                    boughtSquare.classList.add('alert-danger');
                                }
                                else
                                {
                                    boughtSquare.parentNode.classList.remove('bg-light');
                                }

                                if( uniqueIDs.includes(id))
                                {
                                    console.error( `${name} requested square ${id} that was already taken`);
                                }
                                uniqueIDs.push(id)
                            });
                        }
                    }
                }
                console.log( sheetsDict );
                feather.replace();
                $('[data-toggle="tooltip"]').tooltip();
            }

            function getSpreadsheetData(){
                fetch('https://docs.google.com/spreadsheets/u/0/d/1bafC30PCbiUhXolvacKnws0jh676hyytj8Y1lkpT8Us/gviz/tq?tqx=out:html&tq=select+*')
                    .then( response => response.text() )
                    .then( html => updateSquares( html ) )
                    .then( ()=> updateRemainingSquares() )
                    .catch( err => document.querySelector("#squaresleft").innerText = "Error loading squares" );
            }

            async function sequence( key )
            {
                let response = await fetch(`https://www.random.org/sequences/?min=0&max=9&col=10&format=plain&rnd=id.${key}`);
                let data = await response.text();
                console.log( `https://www.random.org/sequences/?min=0&max=9&col=10&format=plain&rnd=id.${key}` );
                return data.trim().split('\t');
            }

            async function pickNumbers()
            {
                if( Date.now() >= kickoff )
                {
                    nfcList = await sequence('superbowl55nfc');
                    afcList = await sequence('superbowl55afc');
                    console.log(nfcList,afcList);
                    for( let i = 0; i < n; i++ )
                    {
                        document.querySelector(`#afc${i}`).innerText = afcList[i];
                        document.querySelector(`#nfc${i}`).innerText = nfcList[i];
                    }
                }
            }

            document.addEventListener('DOMContentLoaded', async ()=> {
                fetch('../img/helmet.svg')
                    .then( response=>response.text() )
                    .then( t => {
                        helmet = document.createElement('div');
                        helmet.innerHTML = t;
                        helmet.classList = "center";
                        helmet.style.width = "50px";
                        getSpreadsheetData();
                });
                pickNumbers();
            });

