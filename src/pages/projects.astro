---
import BaseLayout from '../layouts/BaseLayout.astro';
// import {recurse,readdir} from 'file-system';
import { Debug } from 'astro/components';
import NewsItemComponent from '../components/NewsItemComponent.astro';

const config = {
    title: "Ryan Bucinell - Projects",
    breadcrumbs: [
        {fa:"home",             text:"Home",        url:"index.html"},
        {fa:"settings",         text:"Projects",    url:"#"},
        {fa:"alert-triangle",   text:"Active",      url:"#"}
    ],
    page: {
        title: 'Active Projects',
        small: 'Work In Progress...'
    }
};

const response = await Astro.glob('../../public/projects/projects.json');
const json = JSON.parse(JSON.stringify(response[0]));

// let files = readdir('public/projects/', {withFileTypes: false}, (error,fileDirent) =>{ 
//     console.log( fileDirent );
// });

// let files = recurse('public/projects/', (filepath, readFile, filename) =>{
//     console.log(filepath,readFile,filename);
// });



//TODO: rewrite projects.json to use list instead of a bunch of keys, lot easier to parse.

---
<BaseLayout config={config}>
    <p class="lead center"><span style="color:orange">⚠</span> Just some projects I'm working on or technical tests. <span style="color:orange">⚠</span></p>
    <NewsItemComponent>
        When I build my website, this page is dynamically generated based on the content that is in my (web)projects directory. If there is an index.html in the project's root then you can click on it to see the project. 
        No guarantee these pages are working or intersting as they are all in some form of work-in-progress
    </NewsItemComponent>
    
    <table id="projTable" class="table table-condensed table-hover table-striped">
        <thead class="thead-dark">
        <tr>
            <th>Project Name</th>
            <th>Project Index / Link</th>
        </tr>
        </thead>
        <tbody>
            { Object.keys(json).slice(1).map( key =>{
                return (<tr>
                    <td>{key}</td>
                    <td>
                        {json[key].hasIndex ? 
                            <a href={`${json[key].path}index.html`}>{json[key].path}</a> : 
                            <span>{json[key].path}</span>
                        }
                    </td>
                </tr>)
            })}
        </tbody>
    </table>
</BaseLayout>